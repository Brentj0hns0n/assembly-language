"#include <iostream>"		
"using namespace std;"		
		
"int  a1[12],"		
"     a2[12],"		
"     a3[12];"		
"char reply;"		
"int  used1,"		
"     used2,"		
"     used3,"		
"     remCount,"		
"     anchor;"		
"int* hopPtr1;"		
"int* hopPtr11;"		
"int* hopPtr2;"		
"int* hopPtr22;"		
"int* hopPtr222;"		
"int* hopPtr3;"		
"int* endPtr1;"		
"int* endPtr2;"		
"int* endPtr3;"		
		
"char begA1Str[] = ""beginning a1: "";"		
"char proA1Str[] = ""processed a1: "";"		
"char comA2Str[] = ""          a2: "";"		
"char comA3Str[] = ""          a3: "";"		
"char einStr[]   = ""Enter integer #"";"		
"char moStr[]    = ""Max of "";"		
"char ieStr[]    = "" ints entered..."";"		
"char emiStr[]   = ""Enter more ints? (n or N = no, others = yes) "";"		
"char dacStr[]   = ""Do another case? (n or N = no, others = yes) "";"		
"char dlStr[]    = ""================================"";"		
"char byeStr[]   = ""bye..."";"		
		
"int main()"		
"{"		
"             do"	"DW1   - done"	
"             {"		
"                used1 = 0;"		
"                hopPtr1 = a1;"		
"                do"	"DW2 done"	
"                {"		
"                   cout << einStr;"		
"                   cout << (used1 + 1);"		
"                   cout << ':' << ' ';"		
"                   cin >> *hopPtr1;"		
"                   ++used1;"		
"                   ++hopPtr1;"		
"                   if (used1 == 12)"	"IF1 done"	
"                   {"		
"                      cout << moStr;"		
"                      cout << 12;"		
"                      cout << ieStr;"		
"                      cout << endl;"		
"                      reply = 'n';"		
"                   }"		
"                   else"	"ELSE1 done"	
"                   {"		
"                      cout << emiStr;"		
"                      cin >> reply;"		
"                   }"		
"                }"	"end dw2  - done"	
"                while (reply != 'n' && reply != 'N');"	"WHILE1 - done"	
		
"                cout << begA1Str;"		
"                endPtr1 = a1 + used1;"		
"                for (hopPtr1 = a1; hopPtr1 < endPtr1; ++hopPtr1)"	"FOR1 - done"	
"                {"		
"                   if (hopPtr1 == endPtr1 - 1)"	"IF2  done"	
"                   {"		
"                      cout << *hopPtr1 << endl;"		
"                   }"		
"                   else"	"While2 - done"	
"                   {"		
"                      cout << *hopPtr1 << ' ';"		
"                   }"		
"                }"		
		
"                for (hopPtr1 = a1, hopPtr2 = a2, used2 = 0; hopPtr1 < endPtr1; ++hopPtr1, ++hopPtr2, ++used2)"	"FOR2 - done"	
"                {"		
"                   *hopPtr2 = *hopPtr1;"		
"                }"		
		
"                endPtr2 = a2 + used2;"		
"                for (hopPtr2 = a2; hopPtr2 < endPtr2; ++hopPtr2)"	"FOR3 - done"	
"                {"		
"                   anchor = *hopPtr2;"		
"                   for (hopPtr22 = hopPtr2 + 1; hopPtr22 < endPtr2; ++hopPtr22)"	"FOR4 - done"	
"                   {"		
"                      if (*hopPtr22 == anchor)"	"IF3 done"	
"                      {"		
"                         for (hopPtr222 = hopPtr22 + 1; hopPtr222 < endPtr2; ++hopPtr222)"	"FOR4 - done"	
"                         {"		
"                            *(hopPtr222 - 1) = *hopPtr222;"		
"                         }"		
"                         --used2;"		
"                         --endPtr2;"		
"                         --hopPtr22;"		
"                      }"		
"                   }"		
"                }"		
		
"                used3 = 0;"		
"                hopPtr3 = a3;"		
"                hopPtr1 = a1;"		
"                while (hopPtr1 < endPtr1)"	"While2 - done"	
"                {"		
"                   *hopPtr3 = *hopPtr1;"		
"                   ++used3;"		
"                   ++hopPtr3;"		
"                   anchor = *hopPtr1;"		
"                   remCount = 0;"		
"                   for (hopPtr11 = hopPtr1 + 1; hopPtr11 < endPtr1; ++hopPtr11)"	"FOR6 done"	"Line 155"
"                   {"		
"                      if (*hopPtr11 == anchor)"	"IF4 done"	
"                      {"		
"                         ++remCount;"		
"                      }"		
"                      else"	"ELSE3 done"	
"                      {"		
"                         *(hopPtr11 - remCount) = *hopPtr11;"		
"                      }"		
"                   }"	"end for6"	
"                   used1 -= remCount;"		
"                   endPtr1 -= remCount;"		
"                   ++hopPtr1;"		
"                }"		
		
"                cout << proA1Str;"		
"                for (hopPtr1 = a1; hopPtr1 < endPtr1; ++hopPtr1)"	"FOR7"	
"                {"		
"                   if (hopPtr1 == endPtr1 - 1)"	"IF5"	
"                   {"		
"                      cout << *hopPtr1 << endl;"		
"                   }"		
"                   else"	"ELSE4 done"	
"                   {"		
"                      cout << *hopPtr1 << ' ';"		
"                   }"		
"                }"		
"                cout << comA2Str;"		
"                for (hopPtr2 = a2; hopPtr2 < endPtr2; ++hopPtr2)"	"FOR8 done"	
"                {"		
"                   if (hopPtr2 == endPtr2 - 1)"	"IF6"	
"                   {"		
"                      cout << *hopPtr2 << endl;"		
"                   }"		
"                   else"	"ELSE5"	
"                   {"		
"                      cout << *hopPtr2 << ' ';"		
"                   }"		
"                }"		
"                cout << comA3Str;"		
"                endPtr3 = a3 + used3;"		
"                for (hopPtr3 = a3; hopPtr3 < endPtr3; ++hopPtr3)"	"FOR9"	
"                {"		
"                   if (hopPtr3 == endPtr3 - 1)"	"IF7"	
"                   {"		
"                      cout << *hopPtr3 << endl;"		
"                   }"		
"                   else"	"ELSE6"	
"                   {"		
"                      cout << *hopPtr3 << ' ';"		
"                   }"		
"                }"		
		
"                cout << endl;"		
"                cout << dacStr;"		
"                cin >> reply;"		
"                cout << endl;"		
"             }"		
"             while (reply != 'n' && reply != 'N');"	"DOWHILE1 - done"	
		
"             cout << dlStr;"		
"             cout << '\n';"		
"             cout << byeStr;"		
"             cout << '\n';"		
"             cout << dlStr;"		
"             cout << '\n';"		
		
"             return 0;"		
"}"		
